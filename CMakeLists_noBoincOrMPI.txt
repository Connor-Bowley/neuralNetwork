cmake_minimum_required(VERSION 2.8)
project( ConvNetTest )
#set variables
set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${CMAKE_SOURCE_DIR}/cmake/Modules/")
SET( SRCS src/ConvNetTest.cpp src/ConvNet.cpp )
SET( CMAKE_CXX_FLAGS "-std=c++11 -Wall")
SET( OpenCV_STATIC ON)

list(APPEND CMAKE_PREFIX_PATH /usr/local)
#list(APPEND CMAKE_PREFIX_PATH /Users/connorbowley/Development/test/boinc/api/)

#find packages and libraries
find_package( OpenCV REQUIRED )
find_library( OPENCL_LIBRARY OpenCL.framework )

#set include directories
include_directories( ${OpenCV_INCLUDE_DIRS} ${OpenCL_INCLUDE_DIRS})# ${MPI_INCLUDE_PATH} ${BOINC_INCLUDE_DIRS})

######
###### MAKE EXECUTABLES
######

add_executable( ConvNetTrainerCL src/ConvNetTrainerCL.cpp src/ConvNetCL.cpp )

add_executable( ConvNetContinuanceCL src/ConvNetContinuanceCL.cpp src/ConvNetCL.cpp )

add_executable( ConvNetTester src/ConvNetTester.cpp src/ConvNet.cpp )

add_executable( ConvNetFullImageDriverCL src/ConvNetFullImageDriverCL.cpp src/ConvNetCL.cpp)

add_executable( ConvNetVideoDriverCL src/ConvNetVideoDriverCL.cpp src/ConvNetCL.cpp)
add_executable( ConvNetVideoDriverParallelCL src/ConvNetVideoDriverParallelCL.cpp src/ConvNetCL.cpp)

add_executable( kernelBuilder src/kernelBuilder.cpp )

add_executable( ImageSplitter src/ImageSplitter.cpp )

add_executable( ImageFileCreator src/ImageFileCreator.cpp )
add_executable( TrainingImageFileCreator src/TrainingImageFileCreator.cpp )
add_executable( ImageSplitterFileCreator src/ImageSplitterFileCreator.cpp )
add_executable( TrainingImageSplitterFileCreator src/TrainingImageSplitterFileCreator.cpp )

######
###### LINK LIBRARIES
######


target_link_libraries( ConvNetTrainerCL ${OPENCL_LIBRARY} )

target_link_libraries( ConvNetContinuanceCL ${OPENCL_LIBRARY} )

target_link_libraries( ConvNetTester ${OPENCL_LIBRARY} )

target_link_libraries( ConvNetFullImageDriverCL ${OpenCV_LIBS} ${OPENCL_LIBRARY})

target_link_libraries( ConvNetVideoDriverCL ${OpenCV_LIBS} ${OPENCL_LIBRARY})
target_link_libraries( ConvNetVideoDriverParallelCL ${OpenCV_LIBS} ${OPENCL_LIBRARY})

target_link_libraries( kernelBuilder ${OPENCL_LIBRARY} )

target_link_libraries( ImageSplitter ${OpenCV_LIBS} )

target_link_libraries( ImageFileCreator ${OpenCV_LIBS} )
target_link_libraries( ImageSplitterFileCreator ${OpenCV_LIBS} )
target_link_libraries( TrainingImageFileCreator ${OpenCV_LIBS} )
target_link_libraries( TrainingImageSplitterFileCreator ${OpenCV_LIBS} )
